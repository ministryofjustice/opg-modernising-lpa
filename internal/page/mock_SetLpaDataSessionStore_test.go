// Code generated by mockery. DO NOT EDIT.

package page

import (
	http "net/http"

	sesh "github.com/ministryofjustice/opg-modernising-lpa/internal/sesh"
	mock "github.com/stretchr/testify/mock"
)

// mockSetLpaDataSessionStore is an autogenerated mock type for the SetLpaDataSessionStore type
type mockSetLpaDataSessionStore struct {
	mock.Mock
}

type mockSetLpaDataSessionStore_Expecter struct {
	mock *mock.Mock
}

func (_m *mockSetLpaDataSessionStore) EXPECT() *mockSetLpaDataSessionStore_Expecter {
	return &mockSetLpaDataSessionStore_Expecter{mock: &_m.Mock}
}

// SetLpaData provides a mock function with given fields: r, w, lpaDataSession
func (_m *mockSetLpaDataSessionStore) SetLpaData(r *http.Request, w http.ResponseWriter, lpaDataSession *sesh.LpaDataSession) error {
	ret := _m.Called(r, w, lpaDataSession)

	if len(ret) == 0 {
		panic("no return value specified for SetLpaData")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*http.Request, http.ResponseWriter, *sesh.LpaDataSession) error); ok {
		r0 = rf(r, w, lpaDataSession)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockSetLpaDataSessionStore_SetLpaData_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetLpaData'
type mockSetLpaDataSessionStore_SetLpaData_Call struct {
	*mock.Call
}

// SetLpaData is a helper method to define mock.On call
//   - r *http.Request
//   - w http.ResponseWriter
//   - lpaDataSession *sesh.LpaDataSession
func (_e *mockSetLpaDataSessionStore_Expecter) SetLpaData(r interface{}, w interface{}, lpaDataSession interface{}) *mockSetLpaDataSessionStore_SetLpaData_Call {
	return &mockSetLpaDataSessionStore_SetLpaData_Call{Call: _e.mock.On("SetLpaData", r, w, lpaDataSession)}
}

func (_c *mockSetLpaDataSessionStore_SetLpaData_Call) Run(run func(r *http.Request, w http.ResponseWriter, lpaDataSession *sesh.LpaDataSession)) *mockSetLpaDataSessionStore_SetLpaData_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*http.Request), args[1].(http.ResponseWriter), args[2].(*sesh.LpaDataSession))
	})
	return _c
}

func (_c *mockSetLpaDataSessionStore_SetLpaData_Call) Return(_a0 error) *mockSetLpaDataSessionStore_SetLpaData_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockSetLpaDataSessionStore_SetLpaData_Call) RunAndReturn(run func(*http.Request, http.ResponseWriter, *sesh.LpaDataSession) error) *mockSetLpaDataSessionStore_SetLpaData_Call {
	_c.Call.Return(run)
	return _c
}

// newMockSetLpaDataSessionStore creates a new instance of mockSetLpaDataSessionStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockSetLpaDataSessionStore(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockSetLpaDataSessionStore {
	mock := &mockSetLpaDataSessionStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
