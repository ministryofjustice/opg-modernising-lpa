// Code generated by mockery v2.20.0. DO NOT EDIT.

package donor

import (
	context "context"
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// mockRequestSigner is an autogenerated mock type for the RequestSigner type
type mockRequestSigner struct {
	mock.Mock
}

// Sign provides a mock function with given fields: _a0, _a1, _a2
func (_m *mockRequestSigner) Sign(_a0 context.Context, _a1 *http.Request, _a2 string) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *http.Request, string) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewMockRequestSigner interface {
	mock.TestingT
	Cleanup(func())
}

// newMockRequestSigner creates a new instance of mockRequestSigner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockRequestSigner(t mockConstructorTestingTnewMockRequestSigner) *mockRequestSigner {
	mock := &mockRequestSigner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
