// Code generated by mockery v2.20.0. DO NOT EDIT.

package donor

import (
	context "context"

	page "github.com/ministryofjustice/opg-modernising-lpa/internal/page"
	mock "github.com/stretchr/testify/mock"
)

// mockEvidenceStore is an autogenerated mock type for the EvidenceStore type
type mockEvidenceStore struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0, _a1, _a2
func (_m *mockEvidenceStore) Create(_a0 context.Context, _a1 *page.Lpa, _a2 []File) (*page.Evidence, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 *page.Evidence
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *page.Lpa, []File) (*page.Evidence, error)); ok {
		return rf(_a0, _a1, _a2)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *page.Lpa, []File) *page.Evidence); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*page.Evidence)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *page.Lpa, []File) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockEvidenceStore interface {
	mock.TestingT
	Cleanup(func())
}

// newMockEvidenceStore creates a new instance of mockEvidenceStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockEvidenceStore(t mockConstructorTestingTnewMockEvidenceStore) *mockEvidenceStore {
	mock := &mockEvidenceStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
