// Code generated by mockery v2.42.2. DO NOT EDIT.

package donor

import (
	context "context"

	actor "github.com/ministryofjustice/opg-modernising-lpa/internal/actor"

	mock "github.com/stretchr/testify/mock"

	page "github.com/ministryofjustice/opg-modernising-lpa/internal/page"
)

// mockWitnessCodeSender is an autogenerated mock type for the WitnessCodeSender type
type mockWitnessCodeSender struct {
	mock.Mock
}

type mockWitnessCodeSender_Expecter struct {
	mock *mock.Mock
}

func (_m *mockWitnessCodeSender) EXPECT() *mockWitnessCodeSender_Expecter {
	return &mockWitnessCodeSender_Expecter{mock: &_m.Mock}
}

// SendToCertificateProvider provides a mock function with given fields: _a0, _a1, _a2
func (_m *mockWitnessCodeSender) SendToCertificateProvider(_a0 context.Context, _a1 *actor.DonorProvidedDetails, _a2 page.Localizer) error {
	ret := _m.Called(_a0, _a1, _a2)

	if len(ret) == 0 {
		panic("no return value specified for SendToCertificateProvider")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *actor.DonorProvidedDetails, page.Localizer) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockWitnessCodeSender_SendToCertificateProvider_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SendToCertificateProvider'
type mockWitnessCodeSender_SendToCertificateProvider_Call struct {
	*mock.Call
}

// SendToCertificateProvider is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 *actor.DonorProvidedDetails
//   - _a2 page.Localizer
func (_e *mockWitnessCodeSender_Expecter) SendToCertificateProvider(_a0 interface{}, _a1 interface{}, _a2 interface{}) *mockWitnessCodeSender_SendToCertificateProvider_Call {
	return &mockWitnessCodeSender_SendToCertificateProvider_Call{Call: _e.mock.On("SendToCertificateProvider", _a0, _a1, _a2)}
}

func (_c *mockWitnessCodeSender_SendToCertificateProvider_Call) Run(run func(_a0 context.Context, _a1 *actor.DonorProvidedDetails, _a2 page.Localizer)) *mockWitnessCodeSender_SendToCertificateProvider_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*actor.DonorProvidedDetails), args[2].(page.Localizer))
	})
	return _c
}

func (_c *mockWitnessCodeSender_SendToCertificateProvider_Call) Return(_a0 error) *mockWitnessCodeSender_SendToCertificateProvider_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockWitnessCodeSender_SendToCertificateProvider_Call) RunAndReturn(run func(context.Context, *actor.DonorProvidedDetails, page.Localizer) error) *mockWitnessCodeSender_SendToCertificateProvider_Call {
	_c.Call.Return(run)
	return _c
}

// SendToIndependentWitness provides a mock function with given fields: _a0, _a1, _a2
func (_m *mockWitnessCodeSender) SendToIndependentWitness(_a0 context.Context, _a1 *actor.DonorProvidedDetails, _a2 page.Localizer) error {
	ret := _m.Called(_a0, _a1, _a2)

	if len(ret) == 0 {
		panic("no return value specified for SendToIndependentWitness")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *actor.DonorProvidedDetails, page.Localizer) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockWitnessCodeSender_SendToIndependentWitness_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SendToIndependentWitness'
type mockWitnessCodeSender_SendToIndependentWitness_Call struct {
	*mock.Call
}

// SendToIndependentWitness is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 *actor.DonorProvidedDetails
//   - _a2 page.Localizer
func (_e *mockWitnessCodeSender_Expecter) SendToIndependentWitness(_a0 interface{}, _a1 interface{}, _a2 interface{}) *mockWitnessCodeSender_SendToIndependentWitness_Call {
	return &mockWitnessCodeSender_SendToIndependentWitness_Call{Call: _e.mock.On("SendToIndependentWitness", _a0, _a1, _a2)}
}

func (_c *mockWitnessCodeSender_SendToIndependentWitness_Call) Run(run func(_a0 context.Context, _a1 *actor.DonorProvidedDetails, _a2 page.Localizer)) *mockWitnessCodeSender_SendToIndependentWitness_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*actor.DonorProvidedDetails), args[2].(page.Localizer))
	})
	return _c
}

func (_c *mockWitnessCodeSender_SendToIndependentWitness_Call) Return(_a0 error) *mockWitnessCodeSender_SendToIndependentWitness_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockWitnessCodeSender_SendToIndependentWitness_Call) RunAndReturn(run func(context.Context, *actor.DonorProvidedDetails, page.Localizer) error) *mockWitnessCodeSender_SendToIndependentWitness_Call {
	_c.Call.Return(run)
	return _c
}

// newMockWitnessCodeSender creates a new instance of mockWitnessCodeSender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockWitnessCodeSender(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockWitnessCodeSender {
	mock := &mockWitnessCodeSender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
