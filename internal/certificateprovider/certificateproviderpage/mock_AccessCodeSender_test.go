// Code generated by mockery. DO NOT EDIT.

package certificateproviderpage

import (
	context "context"

	appcontext "github.com/ministryofjustice/opg-modernising-lpa/internal/appcontext"

	lpadata "github.com/ministryofjustice/opg-modernising-lpa/internal/lpastore/lpadata"

	mock "github.com/stretchr/testify/mock"
)

// mockAccessCodeSender is an autogenerated mock type for the AccessCodeSender type
type mockAccessCodeSender struct {
	mock.Mock
}

type mockAccessCodeSender_Expecter struct {
	mock *mock.Mock
}

func (_m *mockAccessCodeSender) EXPECT() *mockAccessCodeSender_Expecter {
	return &mockAccessCodeSender_Expecter{mock: &_m.Mock}
}

// SendAttorneys provides a mock function with given fields: _a0, _a1, _a2
func (_m *mockAccessCodeSender) SendAttorneys(_a0 context.Context, _a1 appcontext.Data, _a2 *lpadata.Lpa) error {
	ret := _m.Called(_a0, _a1, _a2)

	if len(ret) == 0 {
		panic("no return value specified for SendAttorneys")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, appcontext.Data, *lpadata.Lpa) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockAccessCodeSender_SendAttorneys_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SendAttorneys'
type mockAccessCodeSender_SendAttorneys_Call struct {
	*mock.Call
}

// SendAttorneys is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 appcontext.Data
//   - _a2 *lpadata.Lpa
func (_e *mockAccessCodeSender_Expecter) SendAttorneys(_a0 interface{}, _a1 interface{}, _a2 interface{}) *mockAccessCodeSender_SendAttorneys_Call {
	return &mockAccessCodeSender_SendAttorneys_Call{Call: _e.mock.On("SendAttorneys", _a0, _a1, _a2)}
}

func (_c *mockAccessCodeSender_SendAttorneys_Call) Run(run func(_a0 context.Context, _a1 appcontext.Data, _a2 *lpadata.Lpa)) *mockAccessCodeSender_SendAttorneys_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(appcontext.Data), args[2].(*lpadata.Lpa))
	})
	return _c
}

func (_c *mockAccessCodeSender_SendAttorneys_Call) Return(_a0 error) *mockAccessCodeSender_SendAttorneys_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockAccessCodeSender_SendAttorneys_Call) RunAndReturn(run func(context.Context, appcontext.Data, *lpadata.Lpa) error) *mockAccessCodeSender_SendAttorneys_Call {
	_c.Call.Return(run)
	return _c
}

// newMockAccessCodeSender creates a new instance of mockAccessCodeSender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockAccessCodeSender(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockAccessCodeSender {
	mock := &mockAccessCodeSender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
