// Code generated by "enumerator -type YesNo -linecomment -empty"; DO NOT EDIT.
package form

import (
	"fmt"
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Yes-1]
	_ = x[No-2]
}

const _YesNo_name = "yesno"

var _YesNo_index = [...]uint8{0, 3, 5}

func (i YesNo) String() string {
	i -= 1
	if i >= YesNo(len(_YesNo_index)-1) {
		return "YesNo(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _YesNo_name[_YesNo_index[i]:_YesNo_index[i+1]]
}

func (i YesNo) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

func (i YesNo) IsYes() bool {
	return i == Yes
}

func (i YesNo) IsNo() bool {
	return i == No
}

func ParseYesNo(s string) (YesNo, error) {
	switch s {
	case "yes":
		return Yes, nil
	case "no":
		return No, nil
	default:
		return YesNo(0), fmt.Errorf("invalid YesNo '%s'", s)
	}
}

type YesNoOptions struct {
	Yes YesNo
	No  YesNo
}

var YesNoValues = YesNoOptions{
	Yes: Yes,
	No:  No,
}

func (i YesNo) Empty() bool {
	return i == YesNo(0)
}
