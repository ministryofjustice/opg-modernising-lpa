// Code generated by "enumerator -type CorrespondentShare -linecomment -trimprefix -empty -bits"; DO NOT EDIT.
package actor

import (
	"fmt"
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CorrespondentShareOPG-2]
	_ = x[CorrespondentShareAttorneys-4]
	_ = x[CorrespondentShareCertificateProvider-8]
}

const (
	_CorrespondentShare_name_0 = "OPG"
	_CorrespondentShare_name_1 = "Attorneys"
	_CorrespondentShare_name_2 = "CertificateProvider"
)

func (i CorrespondentShare) String() string {
	switch {
	case i == 2:
		return _CorrespondentShare_name_0
	case i == 4:
		return _CorrespondentShare_name_1
	case i == 8:
		return _CorrespondentShare_name_2
	default:
		return "CorrespondentShare(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

func (i CorrespondentShare) Strings() []string {
	var result []string
	if i.HasOPG() {
		result = append(result, CorrespondentShareOPG.String())
	}
	if i.HasAttorneys() {
		result = append(result, CorrespondentShareAttorneys.String())
	}
	if i.HasCertificateProvider() {
		result = append(result, CorrespondentShareCertificateProvider.String())
	}
	return result
}

func (i CorrespondentShare) HasOPG() bool {
	return i&CorrespondentShareOPG != 0
}

func (i CorrespondentShare) HasAttorneys() bool {
	return i&CorrespondentShareAttorneys != 0
}

func (i CorrespondentShare) HasCertificateProvider() bool {
	return i&CorrespondentShareCertificateProvider != 0
}

func ParseCorrespondentShare(strs []string) (CorrespondentShare, error) {
	var result CorrespondentShare

	for _, s := range strs {
		switch s {
		case "OPG":
			result |= CorrespondentShareOPG
		case "Attorneys":
			result |= CorrespondentShareAttorneys
		case "CertificateProvider":
			result |= CorrespondentShareCertificateProvider
		default:
			return CorrespondentShare(0), fmt.Errorf("invalid CorrespondentShare '%s'", s)
		}
	}

	return result, nil
}

type CorrespondentShareOptions struct {
	OPG                 CorrespondentShare
	Attorneys           CorrespondentShare
	CertificateProvider CorrespondentShare
}

var CorrespondentShareValues = CorrespondentShareOptions{
	OPG:                 CorrespondentShareOPG,
	Attorneys:           CorrespondentShareAttorneys,
	CertificateProvider: CorrespondentShareCertificateProvider,
}

func (i CorrespondentShare) Empty() bool {
	return i == CorrespondentShare(0)
}
