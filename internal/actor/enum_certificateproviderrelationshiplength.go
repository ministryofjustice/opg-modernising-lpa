// Code generated by "enumerator -type CertificateProviderRelationshipLength -linecomment -trimprefix -empty"; DO NOT EDIT.
package actor

import (
	"fmt"
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LessThanTwoYears-1]
	_ = x[GreaterThanEqualToTwoYears-2]
}

const _CertificateProviderRelationshipLength_name = "lt-2-yearsgte-2-years"

var _CertificateProviderRelationshipLength_index = [...]uint8{0, 10, 21}

func (i CertificateProviderRelationshipLength) String() string {
	i -= 1
	if i >= CertificateProviderRelationshipLength(len(_CertificateProviderRelationshipLength_index)-1) {
		return "CertificateProviderRelationshipLength(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _CertificateProviderRelationshipLength_name[_CertificateProviderRelationshipLength_index[i]:_CertificateProviderRelationshipLength_index[i+1]]
}

func (i CertificateProviderRelationshipLength) IsLessThanTwoYears() bool {
	return i == LessThanTwoYears
}

func (i CertificateProviderRelationshipLength) IsGreaterThanEqualToTwoYears() bool {
	return i == GreaterThanEqualToTwoYears
}

func ParseCertificateProviderRelationshipLength(s string) (CertificateProviderRelationshipLength, error) {
	switch s {
	case "lt-2-years":
		return LessThanTwoYears, nil
	case "gte-2-years":
		return GreaterThanEqualToTwoYears, nil
	default:
		return CertificateProviderRelationshipLength(0), fmt.Errorf("invalid CertificateProviderRelationshipLength '%s'", s)
	}
}

type CertificateProviderRelationshipLengthOptions struct {
	LessThanTwoYears           CertificateProviderRelationshipLength
	GreaterThanEqualToTwoYears CertificateProviderRelationshipLength
}

var CertificateProviderRelationshipLengthValues = CertificateProviderRelationshipLengthOptions{
	LessThanTwoYears:           LessThanTwoYears,
	GreaterThanEqualToTwoYears: GreaterThanEqualToTwoYears,
}

func (i CertificateProviderRelationshipLength) Empty() bool {
	return i == CertificateProviderRelationshipLength(0)
}
