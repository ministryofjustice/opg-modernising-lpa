// Code generated by mockery. DO NOT EDIT.

package voucherpage

import (
	context "context"

	donordata "github.com/ministryofjustice/opg-modernising-lpa/internal/donor/donordata"
	mock "github.com/stretchr/testify/mock"
)

// mockLpaStoreClient is an autogenerated mock type for the LpaStoreClient type
type mockLpaStoreClient struct {
	mock.Mock
}

type mockLpaStoreClient_Expecter struct {
	mock *mock.Mock
}

func (_m *mockLpaStoreClient) EXPECT() *mockLpaStoreClient_Expecter {
	return &mockLpaStoreClient_Expecter{mock: &_m.Mock}
}

// SendDonorConfirmIdentity provides a mock function with given fields: ctx, donor
func (_m *mockLpaStoreClient) SendDonorConfirmIdentity(ctx context.Context, donor *donordata.Provided) error {
	ret := _m.Called(ctx, donor)

	if len(ret) == 0 {
		panic("no return value specified for SendDonorConfirmIdentity")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *donordata.Provided) error); ok {
		r0 = rf(ctx, donor)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockLpaStoreClient_SendDonorConfirmIdentity_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SendDonorConfirmIdentity'
type mockLpaStoreClient_SendDonorConfirmIdentity_Call struct {
	*mock.Call
}

// SendDonorConfirmIdentity is a helper method to define mock.On call
//   - ctx context.Context
//   - donor *donordata.Provided
func (_e *mockLpaStoreClient_Expecter) SendDonorConfirmIdentity(ctx interface{}, donor interface{}) *mockLpaStoreClient_SendDonorConfirmIdentity_Call {
	return &mockLpaStoreClient_SendDonorConfirmIdentity_Call{Call: _e.mock.On("SendDonorConfirmIdentity", ctx, donor)}
}

func (_c *mockLpaStoreClient_SendDonorConfirmIdentity_Call) Run(run func(ctx context.Context, donor *donordata.Provided)) *mockLpaStoreClient_SendDonorConfirmIdentity_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*donordata.Provided))
	})
	return _c
}

func (_c *mockLpaStoreClient_SendDonorConfirmIdentity_Call) Return(_a0 error) *mockLpaStoreClient_SendDonorConfirmIdentity_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockLpaStoreClient_SendDonorConfirmIdentity_Call) RunAndReturn(run func(context.Context, *donordata.Provided) error) *mockLpaStoreClient_SendDonorConfirmIdentity_Call {
	_c.Call.Return(run)
	return _c
}

// newMockLpaStoreClient creates a new instance of mockLpaStoreClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockLpaStoreClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockLpaStoreClient {
	mock := &mockLpaStoreClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
