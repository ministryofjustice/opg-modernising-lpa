version: "2"
dynamodb-pipeline:
  source:
    dynamodb:
      acknowledgments: true
      tables:
        - table_arn: ${source.tables.table_arn}
          export:
            s3_bucket: ${source.tables.s3_bucket_name}
            s3_sse_kms_key_id: ${source.tables.s3_sse_kms_key_id}
          stream:
            start_position: ${source.tables.stream.start_position}
      aws:
        sts_role_arn: ${source.tables.aws.sts_role_arn}
        region: ${source.tables.aws.region}
  routes:
    - lay_journey_lpas: ${routes.lay_journey_lpas}
    - supporter_journey_lpas: ${routes.supporter_journey_lpas}
  processor:
    - select_entries:
        include_keys: [
          "PK",
          "SK",
          "Donor",
        ]
    - copy_values:
        entries:
        - from_key: "PK"
          to_key: "DocumentID"
    - substitute_string:
        entries:
          - source: "DocumentID"
            from: "LPA#"
            to: "LPA--"
  sink:
    - opensearch:
        hosts: ["${sink.opensearch.hosts}"]
        index: ${sink.opensearch.index}
        routes: ["lay_journey_lpas", "supporter_journey_lpas"]
        template_type: index-template
        template_content: >
          {
              "settings": {
                  "index": {
                      "number_of_shards": 1,
                      "number_of_replicas": 1
                  }
              },
              "mappings": {
                  "properties": {
                      "PK": {"type": "keyword"},
                      "SK": {"type": "keyword"},
                      "Donor.FirstNames": {"type": "keyword"},
                      "Donor.LastName": {"type": "keyword"}
                  }
              }
          }
        document_id: ${sink.opensearch.document_id}
        aws:
          sts_role_arn: ${sink.opensearch.aws.sts_role_arn}
          region: ${sink.opensearch.aws.region}
          serverless: true
          serverless_options:
            network_policy_name: ${sink.opensearch.aws.serverless_options.network_policy_name}
