// Code generated by mockery v2.39.1. DO NOT EDIT.

package main

import (
	context "context"

	types "github.com/aws/aws-sdk-go-v2/service/s3/types"
	mock "github.com/stretchr/testify/mock"
)

// mockS3Client is an autogenerated mock type for the s3Client type
type mockS3Client struct {
	mock.Mock
}

// GetObjectTags provides a mock function with given fields: ctx, key
func (_m *mockS3Client) GetObjectTags(ctx context.Context, key string) ([]types.Tag, error) {
	ret := _m.Called(ctx, key)

	if len(ret) == 0 {
		panic("no return value specified for GetObjectTags")
	}

	var r0 []types.Tag
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) ([]types.Tag, error)); ok {
		return rf(ctx, key)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) []types.Tag); ok {
		r0 = rf(ctx, key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]types.Tag)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// newMockS3Client creates a new instance of mockS3Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockS3Client(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockS3Client {
	mock := &mockS3Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
