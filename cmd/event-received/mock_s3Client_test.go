// Code generated by mockery v2.41.0. DO NOT EDIT.

package main

import (
	context "context"

	types "github.com/aws/aws-sdk-go-v2/service/s3/types"
	mock "github.com/stretchr/testify/mock"
)

// mockS3Client is an autogenerated mock type for the s3Client type
type mockS3Client struct {
	mock.Mock
}

type mockS3Client_Expecter struct {
	mock *mock.Mock
}

func (_m *mockS3Client) EXPECT() *mockS3Client_Expecter {
	return &mockS3Client_Expecter{mock: &_m.Mock}
}

// GetObjectTags provides a mock function with given fields: ctx, key
func (_m *mockS3Client) GetObjectTags(ctx context.Context, key string) ([]types.Tag, error) {
	ret := _m.Called(ctx, key)

	if len(ret) == 0 {
		panic("no return value specified for GetObjectTags")
	}

	var r0 []types.Tag
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) ([]types.Tag, error)); ok {
		return rf(ctx, key)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) []types.Tag); ok {
		r0 = rf(ctx, key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]types.Tag)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockS3Client_GetObjectTags_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetObjectTags'
type mockS3Client_GetObjectTags_Call struct {
	*mock.Call
}

// GetObjectTags is a helper method to define mock.On call
//   - ctx context.Context
//   - key string
func (_e *mockS3Client_Expecter) GetObjectTags(ctx interface{}, key interface{}) *mockS3Client_GetObjectTags_Call {
	return &mockS3Client_GetObjectTags_Call{Call: _e.mock.On("GetObjectTags", ctx, key)}
}

func (_c *mockS3Client_GetObjectTags_Call) Run(run func(ctx context.Context, key string)) *mockS3Client_GetObjectTags_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *mockS3Client_GetObjectTags_Call) Return(_a0 []types.Tag, _a1 error) *mockS3Client_GetObjectTags_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockS3Client_GetObjectTags_Call) RunAndReturn(run func(context.Context, string) ([]types.Tag, error)) *mockS3Client_GetObjectTags_Call {
	_c.Call.Return(run)
	return _c
}

// newMockS3Client creates a new instance of mockS3Client. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockS3Client(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockS3Client {
	mock := &mockS3Client{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
