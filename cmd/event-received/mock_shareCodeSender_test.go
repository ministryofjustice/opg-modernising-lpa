// Code generated by mockery v2.20.0. DO NOT EDIT.

package main

import (
	context "context"

	notify "github.com/ministryofjustice/opg-modernising-lpa/internal/notify"
	mock "github.com/stretchr/testify/mock"

	page "github.com/ministryofjustice/opg-modernising-lpa/internal/page"
)

// mockShareCodeSender is an autogenerated mock type for the shareCodeSender type
type mockShareCodeSender struct {
	mock.Mock
}

// SendCertificateProvider provides a mock function with given fields: _a0, _a1, _a2, _a3, _a4
func (_m *mockShareCodeSender) SendCertificateProvider(_a0 context.Context, _a1 notify.Template, _a2 page.AppData, _a3 bool, _a4 *page.Lpa) error {
	ret := _m.Called(_a0, _a1, _a2, _a3, _a4)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, notify.Template, page.AppData, bool, *page.Lpa) error); ok {
		r0 = rf(_a0, _a1, _a2, _a3, _a4)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewMockShareCodeSender interface {
	mock.TestingT
	Cleanup(func())
}

// newMockShareCodeSender creates a new instance of mockShareCodeSender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockShareCodeSender(t mockConstructorTestingTnewMockShareCodeSender) *mockShareCodeSender {
	mock := &mockShareCodeSender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
