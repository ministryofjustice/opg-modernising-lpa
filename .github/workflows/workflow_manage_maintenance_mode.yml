name: "[WD] Manage Maintenance Mode"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to target for maintenance mode'
        required: true
        type: string
      region:
        description: 'AWS region to locate ALBs to target'
        required: true
        default: 'eu-west-1'
        type: choice
        options:
        - eu-west-1
        - eu-west-2
      maintenance_mode_enabled:
        description: 'Whether to enable or disable maintenance mode'
        required: true
        type: boolean

permissions:
  id-token: write
  contents: none
  security-events: none
  pull-requests: none
  actions: none
  checks: none
  deployments: none
  issues: none
  packages: none
  repository-projects: none
  statuses: none

defaults:
  run:
    shell: bash

jobs:
  manage_maintenance_mode:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: unfor19/install-aws-cli-action@v1
      - name: Determine role to use for maintenance mode
        run: |
          if [[ ${{ github.event.inputs.environment }} == "production" ]]; then
            echo "Using production account role"
            echo "::set-output role=${{ secrets.PRODUCTION_MAINTENANCE_MODE_ROLE }}"
          elif [[ ${{ github.event.inputs.environment }} == "preproduction" ]]; then
            echo "Using preproduction account role"
            echo "::set-output role=${{ secrets.PREPRODUCTION_MAINTENANCE_MODE_ROLE }}"
          else
            echo "Using dev account role"
            echo "::set-output role=${{ secrets.DEVELOPMENT_MAINTENANCE_MODE_ROLE }}"
          fi
      - name: Configure AWS credentials for maintenance mode
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ github.event.inputs.region }}
          role-duration-seconds: 3600
          role-session-name: MLPABManageMaintenanceMode
          role-to-assume: ${{ steps.determine_role.outputs.role }}
      - name: Enable maintenance mode
        if: ${{ github.event.inputs.maintenance_mode_enabled == 'true' }}
        run: |
          ./manage_maintenance.sh \
            --environment ${{ github.event.inputs.environment }} \
            --maintenance_mode
        working-directory: ./scripts/maintenance_mode
      - name: Disable maintenance mode
        if: ${{ github.event.inputs.maintenance_mode_enabled == 'false' }}
        run: |
          ./manage_maintenance.sh \
            --environment ${{ github.event.inputs.environment }} \
            --disable_maintenance_mode
        working-directory: ./scripts/maintenance_mode
