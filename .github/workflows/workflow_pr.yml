name: "[Workflow] PR"

on:
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  security-events: write
  pull-requests: read
  actions: none
  checks: none
  deployments: none
  issues: none
  packages: none
  repository-projects: none
  statuses: none

defaults:
  run:
    shell: bash

jobs:
  detect_changes:
    name: Detect Changes
    uses: ./.github/workflows/detect_changes_to_app_job.yml

  create_tags:
    name: Create Tags
    needs: detect_changes
    uses: ./.github/workflows/tags_job.yml
    with:
      changes_detected: ${{ needs.detect_changes.outputs.changes_detected }}

  go_unit_tests:
    name: Run Go unit tests
    if: needs.detect_changes.outputs.changes_detected == 'true' &&
    needs: create_tags
    uses: ./.github/workflows/go-unit-tests.yml
    with:
      changes_detected: ${{ needs.detect_changes.outputs.changes_detected }}

  docker_build_scan_push:
    name: Docker Build, Scan and Push
    if: needs.detect_changes.outputs.changes_detected == 'true' &&
        needs.go_unit_tests.result == 'success' || needs.go_unit_tests.result == 'skipped'
    uses: ./.github/workflows/docker_job.yml
    needs: [
      go_unit_tests,
      create_tags
      ]
    with:
      tag: ${{ needs.create_tags.outputs.version_tag }}
      changes_detected: ${{ needs.detect_changes.outputs.changes_detected }}

  # terraform_account_workflow_development:
  #   name: TF Plan Dev Account
  #   uses: ./.github/workflows/terraform_account_job.yml
  #   with:
  #     workspace_name: development
  #   secrets: inherit # pragma: allowlist secret

  # terraform_account_workflow_preproduction:
  #   name: TF Plan Preprod Account
  #   needs: terraform_account_workflow_development
  #   uses: ./.github/workflows/terraform_account_job.yml
  #   with:
  #     workspace_name: preproduction
  #   secrets: inherit # pragma: allowlist secret

  # terraform_account_workflow_production:
  #   name: TF Plan Prod Account
  #   needs: terraform_account_workflow_development
  #   uses: ./.github/workflows/terraform_account_job.yml
  #   with:
  #     workspace_name: production
  #   secrets: inherit # pragma: allowlist secret

  # ui_tests_image:
  #   name: Run Cypress UI Tests On Images
  #   if: |
  #     needs.detect_changes.outputs.changes_detected == 'true' &&
  #     needs.docker_build_scan_push.result == 'success' || needs.docker_build_scan_push.result == 'skipped'
  #   uses: ./.github/workflows/ui_test_job.yml
  #   needs: [docker_build_scan_push, create_tags]
  #   with:
  #     run_against_image: true
  #     tag: ${{ needs.create_tags.outputs.version_tag }}
  #     changes_detected: ${{ needs.detect_changes.outputs.changes_detected }}
  #   secrets: inherit # pragma: allowlist secret

  # pr_deploy:
  #     name: PR Environment Deploy
  #     needs: [
  #       create_tags,
  #       docker_build_scan_push,
  #       ui_tests_image
  #     ]
  #     uses: ./.github/workflows/terraform_environment_job.yml
  #     with:
  #       workspace_name: ${{ needs.create_tags.outputs.environment_workspace_name }}
  #       version_tag: ${{ needs.create_tags.outputs.version_tag }}
  #     secrets: inherit # pragma: allowlist secret

  # ui_tests_pr_env:
  #   name: Run Cypress UI Tests On PR Environment
  #   uses: ./.github/workflows/ui_test_job.yml
  #   needs: [pr_deploy, create_tags]
  #   with:
  #     run_against_image: false
  #     base_url: "https://${{ needs.pr_deploy.outputs.url }}"
  #     tag: ${{ needs.create_tags.outputs.version_tag }}
  #     changes_detected: ${{ needs.detect_changes.outputs.changes_detected }}
  #   secrets: inherit # pragma: allowlist secret

  # always_remove_ingress:
  #   name: Remove CI ingress from environment
  #   if: ${{ always() }}
  #   uses: ./.github/workflows/remove_ingress_job.yml
  #   needs: [ui_tests_pr_env]
  #   secrets: inherit # pragma: allowlist secret

  # end_of_pr_workflow:
  #   name: End of PR Workflow
  #   if: github.ref != 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: "dev_${{ needs.create_tags.outputs.environment_workspace_name }}"
  #     url: "https://${{ needs.pr_deploy.outputs.url }}"
  #   needs: [pr_deploy, create_tags, ui_tests_pr_env]
  #   steps:
  #     - name: End of PR Workflow
  #       run: |
  #         echo "${{ needs.pr_deploy.outputs.terraform_workspace_name }} PR environment tested, built and deployed"
  #         echo "Tag Deployed: ${{ needs.pr_deploy.outputs.terraform_container_version }}"
  #         echo "URL: https://${{ needs.pr_deploy.outputs.url }}"
