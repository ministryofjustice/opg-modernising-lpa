name: "[Job] Manage AWS Account Infrastructure"

on:
  workflow_call:
    inputs:
      workspace_name:
        description: 'The terraform workspace to target for account actions'
        required: true
        type: string
    secrets:
      aws_access_key_id:
        description: 'AWS Access Key ID'
        required: true
      aws_secret_access_key:
        description: 'AWS Secret Access Key'
        required: true
      pagerduty_api_key:
        description: 'Pagerduty API Key'
        required: true

env:
  TFLINT_VERSION: 0.50.1

jobs:
  terraform_account_workflow:
    name: "${{ inputs.workspace_name }} account deployment"
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.bump_version.outputs.tag }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: '0'
      - uses: unfor19/install-aws-cli-action@f5b46b7f32cf5e7ebd652656c5036bf83dd1e60c # v1
      - name: Parse terraform version
        id: tf_version_setup
        working-directory: ./terraform/account
        run: |
          if [ -f ./versions.tf ]; then
            terraform_version=$(cat ./versions.tf | ../../scripts/terraform-version.sh)
            echo "- Terraform version: [${terraform_version}]" >> $GITHUB_STEP_SUMMARY
            echo "TERRAFORM_VERSION=${terraform_version}" >> $GITHUB_OUTPUT
          fi
      - name: "Terraform version [${{ steps.tf_version_setup.outputs.TERRAFORM_VERSION }}]"
        run: echo "terraform version [${{ steps.tf_version_setup.outputs.TERRAFORM_VERSION }}]"
        working-directory: ./terraform/account
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ steps.tf_version_setup.outputs.TERRAFORM_VERSION }}
          terraform_wrapper: false
      - name: Configure AWS Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: OPGModernisingLPATerraformGithubAction
      - uses: terraform-linters/setup-tflint@90f302c255ef959cbfb4bd10581afecdb7ece3e6 # v4
        name: Setup TFLint
        with:
          tflint_version: v${{ env.TFLINT_VERSION }}

      - name: Check formatting
        id: tf_fmt
        run: terraform fmt -check -recursive
        working-directory: ./terraform/account
        continue-on-error: true

      - name: Lint Terraform
        id: tf_lint
        run: tflint --recursive
        working-directory: ./terraform/account

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ./terraform/account

      - name: Terraform Plan
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_pagerduty_api_key: ${{ secrets.pagerduty_api_key }}
        run: |
          terraform workspace show
          terraform plan -input=false -parallelism=30 -lock-timeout=300s -out=terraform.plan
        working-directory: ./terraform/account

      - name: Terraform Apply
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_pagerduty_api_key: ${{ secrets.pagerduty_api_key }}
        if: github.ref == 'refs/heads/main'
        run: |
          terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30 terraform.plan
        working-directory: ./terraform/account
