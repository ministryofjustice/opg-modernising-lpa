name: "[Job] check healthcheck endpoints"

on:
  workflow_call:
    inputs:
      base_url:
        description: 'Environment URL to target for testing'
        required: false
        type: string
        default: http://localhost:5050
      environment_config_json:
        description: 'Environment config JSON'
        required: false
        type: string
    secrets:
      aws_access_key_id:
        description: 'AWS Access Key ID'
        required: true
      aws_secret_access_key:
        description: 'AWS Secret Access Key'
        required: true
      github_access_token:
        description: 'Github Token'
        required: true


defaults:
  run:
    shell: bash

jobs:
  run_ui_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          ref: ${{ inputs.checkout_tag }}
      - name: Manage Ingress/Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: eu-west-1
          role-duration-seconds: 900
          role-session-name: OPGModernisingLPATerraformGithubActionTestInfra
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.13'
          check-latest: true
      - run: pip install -r ./scripts/ci_ingress/requirements.txt
      - name: add_ingress
        run: python ./scripts/ci_ingress/ci_ingress.py ${{ inputs.environment_config_json}} --add
      - name: Check environment is available
        run: |
          service_response=$(curl --write-out %{http_code} --silent --output /dev/null ${{ inputs.base_url }}/health-check/service)
          [[ $service_response == 200 ]] || (echo "Error with service health check. HTTP status: ${service_response}" && exit 1)
          dependency_response=$(curl --write-out %{http_code} --silent --output /dev/null ${{ inputs.base_url }}/health-check/dependency)
          [[ $dependency_response == 200 ]] || (echo "Error with service health check. HTTP status: ${dependency_response}" && exit 1)
