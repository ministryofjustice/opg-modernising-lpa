name: "[Job] Run UI tests"

on:
  workflow_call:
    inputs:
      base_url:
        description: 'Environment URL to target for testing'
        required: false
        type: string
        default: http://localhost:5050
      run_against_image:
        description: 'Target a docker compose service environment'
        required: true
        type: boolean
      tag:
        description: 'Tag for docker image'
        required: false
        type: string
        default: latest
      checkout_tag:
        description: 'Ref or tag to checkout'
        default: ${{ github.ref }}
        required: false
        type: string
      skip:
        description: 'Should running all tests be skipped'
        required: false
        default: false
        type: boolean
      environment_config_json:
        description: 'Environment config JSON'
        required: false
        type: string
      specs:
        description: 'A list of cypress specs, directories or globs containing specs to run in format "filepath filepath"'
        required: true
        type: string
    secrets:
      aws_access_key_id:
        description: 'AWS Access Key ID'
        required: true
      aws_secret_access_key:
        description: 'AWS Secret Access Key'
        required: true
      cypress_record_key:
        description: 'Cypress Record Key'
        required: true
      github_access_token:
        description: 'Github Token'
        required: true

defaults:
  run:
    shell: bash

jobs:
  run_ui_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_tag }}
      - uses: unfor19/install-aws-cli-action@v1
        name: Run Against Image/aws-cli-action
        if: inputs.run_against_image
      - name: Run Against Image/Configure AWS Credentials
        if: inputs.run_against_image
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/modernising-lpa-github-actions-ecr-pull
          role-duration-seconds: 900
          role-session-name: GithubActionsECRPullMLPAB
      - name: Run Against Image/ECR Login
        if: inputs.run_against_image
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1.7.1
        with:
          mask-password: true
          registries: 311462405659
      - name: Run Against Image/Run Docker Compose Service
        if: inputs.run_against_image
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          TAG: ${{ inputs.tag }}
        run: |
          docker compose -f docker/docker-compose.yml -f docker/docker-compose.ci.yml pull
          docker compose -f docker/docker-compose.yml -f docker/docker-compose.ci.yml up -d

      - name: Manage Ingress/Configure AWS Credentials
        if: inputs.run_against_image != true
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: eu-west-1
          role-duration-seconds: 900
          role-session-name: OPGModernisingLPATerraformGithubActionTestInfra
      - uses: actions/setup-python@v4
        if: inputs.run_against_image != true
        with:
          python-version: '3.9'
          check-latest: true
      - run: pip install -r ./scripts/ci_ingress/requirements.txt
        if: inputs.run_against_image != true
      - name: add_ingress
        if: inputs.run_against_image != true
        run: python ./scripts/ci_ingress/ci_ingress.py ${{ inputs.environment_config_json}} --add

      - name: Cypress run
        uses: actions/setup-node@v4
        if: inputs.skip != true
        env:
          CYPRESS_baseUrl: ${{ inputs.base_url }}
          CYPRESS_RECORD_KEY: ${{ secrets.cypress_record_key }}
          GITHUB_TOKEN: ${{ secrets.github_access_token }}
        run:
          yarn run cypress:parallel-with-specs --spec ${{ inputs.specs }}

      - name: Persist Cypress failure screenshots as artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-failure-screenshots
          path: ./cypress/screenshots/

      - name: Stop Docker Compose Service
        if: always()
        run:
          docker compose -f docker/docker-compose.yml -f docker/docker-compose.ci.yml down
