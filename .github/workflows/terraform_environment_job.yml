on:
  workflow_call:
    inputs:
      workspace_name:
        description: 'The terraform workspace to target for environment actions'
        required: true
        type: string
      version_tag:
        description: 'The docker image tag to deploy in the environment'
        required: true
        type: string
      checkout_tag:
        description: 'Ref or tag to checkout'
        default: ${{ github.ref }}
        required: false
        type: string
    outputs:
      terraform_workspace_name:
        description: "Name of Terraform workspace"
        value: ${{ jobs.terraform_environment_workflow.outputs.terraform_workspace_name }}
      terraform_container_version:
        description: "Container version deployed by Terraform"
        value: ${{ jobs.terraform_environment_workflow.outputs.terraform_container_version }}
      url:
        description: "URL for environment"
        value: ${{ jobs.terraform_environment_workflow.outputs.url }}
    secrets:
      aws_access_key_id:
        description: 'AWS Access Key ID'
        required: true
      aws_secret_access_key:
        description: 'AWS Secret Access Key'
        required: true
      ssh_deploy_key:
        description: 'SSH Deploy Key'
        required: true
      github_access_token:
        description: 'Github Token'
        required: true

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  terraform_environment_workflow:
    runs-on: ubuntu-latest
    outputs:
      terraform_workspace_name: ${{ steps.terraform_outputs.outputs.workspace_name }}
      terraform_container_version: ${{ steps.terraform_outputs.outputs.container_version }}
      url: ${{ steps.terraform_outputs.outputs.url }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.checkout_tag }}
          fetch-depth: '0'
      - uses: unfor19/install-aws-cli-action@v1
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.6
          terraform_wrapper: false
      - name: Configure AWS Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: OPGModernisingLPATerraformGithubAction
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.ssh_deploy_key }}

      - name: Lint Terraform
        id: tf_lint
        run: terraform fmt -check -recursive
        working-directory: ./terraform/environment
        continue-on-error: true

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: ./terraform/environment

      - name: Terraform Plan
        id: terraform_plan
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_container_version: ${{ inputs.version_tag }}
        run: |
          terraform workspace show
          echo "plan_summary=$(terraform plan -lock-timeout=300s -input=false -parallelism=30 | grep Plan:)" >> $GITHUB_OUTPUT
          terraform plan -lock-timeout=300s -input=false -parallelism=30

        working-directory: ./terraform/environment

      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.github_access_token }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Terraform Plan Summary: \n' + '${{ steps.terraform_plan.outputs.plan_summary }}
            })

      - name: Protect environment workspace
        if: github.ref != 'refs/heads/main'
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_container_version: ${{ inputs.version_tag }}
        run: |
          wget https://github.com/TomTucka/terraform-workspace-manager/releases/download/v0.3.1/terraform-workspace-manager_Linux_x86_64.tar.gz -O $HOME/terraform-workspace-manager.tar.gz
          sudo tar -xvf $HOME/terraform-workspace-manager.tar.gz -C /usr/local/bin
          sudo chmod +x /usr/local/bin/terraform-workspace-manager
          terraform-workspace-manager -register-workspace=$TF_WORKSPACE -time-to-protect=24 -aws-account-id=653761790766 -aws-iam-role=modernising-lpa-ci
        working-directory: ./terraform/environment

      - name: Terraform Apply
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_container_version: ${{ inputs.version_tag }}
        run: |
          terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30
        working-directory: ./terraform/environment

      - name: upload environment config file
        uses: actions/upload-artifact@v3
        with:
          name: environment_config_file
          path: ./terraform/environment/environment_config.json

      - name: Terraform Outputs
        id: terraform_outputs
        env:
          TF_WORKSPACE: ${{ inputs.workspace_name }}
          TF_VAR_container_version: ${{ inputs.version_tag }}
        run: |
          echo "workspace_name=$(terraform output -raw workspace_name)" >> $GITHUB_OUTPUT
          echo "container_version=$(terraform output -raw container_version)" >> $GITHUB_OUTPUT
          echo "url=$(terraform output -raw app_fqdn)" >> $GITHUB_OUTPUT
        working-directory: ./terraform/environment
