on:
  workflow_call:
    inputs:
      tag:
        description: 'Tag for docker image'
        required: true
        type: string

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read

jobs:
  docker_build_scan_push:
    runs-on: ubuntu-latest
    steps:


      - uses: actions/checkout@v3
      - name: Build Image
        id: build_image
        run: |
          docker build -t app .
      - name: Trivy Image Vulnerability Scanner
        id: trivy_scan
        uses: aquasecurity/trivy-action@0.7.1
        with:
          image-ref: app:latest
          severity: 'HIGH,CRITICAL'
          format: 'sarif'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        id: trivy_upload_sarif
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - uses: unfor19/install-aws-cli-action@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/github-actions-ecr-push
          role-duration-seconds: 900
          role-session-name: GithubActionsECRPushMLPAB

      - name: ECR Login
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1.5.1
        with:
          registries: 311462405659
      - name: Push Container
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          ECR_REPOSITORY: modernising-lpa/app
        run: |
          docker tag app:latest $ECR_REGISTRY/$ECR_REPOSITORY:${{ inputs.tag }}
          if [ ${{ github.head_ref }} == "main" ]; then
            docker tag app:latest $ECR_REGISTRY/$ECR_REPOSITORY:main-${{ inputs.tag }}
            docker tag app:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          fi
            docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY
