name: "[Job] Docker Build, Scan and Push to ECR"

on:
  workflow_call:
    inputs:
      tag:
        description: 'Tag for docker image'
        required: true
        type: string
      checkout_tag:
        description: 'Ref or tag to checkout'
        default: ${{ github.ref }}
        required: false
        type: string
      branch_name:
        description: 'Branch name'
        required: true
        type: string

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: write
  security-events: write
  pull-requests: read

jobs:
  docker_build_scan_push:
    strategy:
      fail-fast: false
      matrix:
        include:
          - ecr_repository: modernising-lpa/app
            name: app
            path: ./docker/mlpa/Dockerfile
            trivyignores: ./docker/mlpa/.trivyignore.yaml
            platforms: linux/amd64
          - ecr_repository: modernising-lpa/create-s3-batch-replication-job
            name: create-s3-batch-replication-job
            path: ./docker/create-s3-replication-job/Dockerfile
            trivyignores: ./docker/create-s3-replication-job/.trivyignore.yaml
            platforms: linux/amd64
          - ecr_repository: modernising-lpa/event-received
            name: event-received
            path: ./docker/event-received/Dockerfile
            trivyignores: ./docker/event-received/.trivyignore.yaml
            platforms: linux/amd64
          - ecr_repository: modernising-lpa/mock-pay
            name: mock-pay
            path: ./docker/mock-pay/Dockerfile
            trivyignores: ./docker/mock-pay/.trivyignore.yaml
            platforms: linux/amd64
          - ecr_repository: modernising-lpa/schedule-runner
            name: schedule-runner
            path: ./docker/schedule-runner/Dockerfile
            trivyignores: ./docker/schedule-runner/.trivyignore.yaml
            platforms: linux/amd64

    runs-on: ubuntu-latest
    name: ${{ matrix.ecr_repository }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ inputs.checkout_tag }}

      - uses: hadolint/hadolint-action@3fc49fb50d59c6ab7917a2e4195dba633e515b29 # v3.2.0
        id: hadolint
        with:
          dockerfile: ${{ matrix.path }}
          no-fail: false
          failure-threshold: warning

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        id: buildx_setup
        with:
          version: v0.15.1
          platforms: linux/amd64,linux/arm64

      - uses: unfor19/install-aws-cli-action@f5b46b7f32cf5e7ebd652656c5036bf83dd1e60c # v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/modernising-lpa-github-actions-ecr-push
          role-duration-seconds: 900
          role-session-name: GithubActionsECRPushMLPAB
      - name: ECR Login
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          mask-password: true
          registries: 311462405659

      - name: Trivy Dockerfile Configuration Scanner for ${{ matrix.ecr_repository }}
        id: trivy_dockerfile_misconfiguration_scan
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        env:
          TRIVY_DB_REPOSITORY: ${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: ${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-java-db:1
          TRIVY_IGNOREFILE: ${{ matrix.trivyignores }}
        with:
          scan-type: fs
          scan-ref: ${{ matrix.path }}
          severity: 'HIGH,CRITICAL'
          scanners: 'misconfig'
          version: v0.65.0
          exit-code: 1

      - name: Build ${{ matrix.ecr_repository }} Image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ${{ matrix.path }}
          platforms: linux/amd64
          push: false
          load: true
          cache-from: type=registry,ref=${{ steps.login_ecr.outputs.registry }}/${{ matrix.ecr_repository }}:cache-${{ inputs.branch_name }}
          tags: |
            ${{ matrix.ecr_repository }}:${{ inputs.tag }}
          build-args: |
            TAG=${{inputs.tag}}
        env:
          SOURCE_DATE_EPOCH: 0
          DOCKER_CONTENT_TRUST: 1

      - name: Trivy Image Vulnerability Scanner
        id: trivy_scan
        run: |
          mkdir -p -m 0777 .trivy-cache ./test-results/
          docker run \
            --volume /var/run/docker.sock:/var/run/docker.sock \
            --volume ./.trivy-cache:/root/.cache \
            --volume ./test-results:/test-results \
            --volume ./${{ matrix.trivyignores }}:/.trivyignore.yaml \
            --env TRIVY_IGNOREFILE='.trivyignore.yaml' \
            --env TRIVY_DB_REPOSITORY=${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-db:2 \
            --env TRIVY_JAVA_DB_REPOSITORY=${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-java-db:1 \
            --env TRIVY_USERNAME=${{ steps.login_ecr.outputs.docker_username_311462405659_dkr_ecr_eu_west_1_amazonaws_com }} \
            --env TRIVY_PASSWORD=${{ steps.login_ecr.outputs.docker_password_311462405659_dkr_ecr_eu_west_1_amazonaws_com }} \
            aquasec/trivy:0.65.0 image \
            ${{ matrix.ecr_repository }}:${{ inputs.tag }} \
            --format table \
            --severity HIGH,CRITICAL

          docker run \
            --volume /var/run/docker.sock:/var/run/docker.sock \
            --volume ./.trivy-cache:/root/.cache \
            --volume ./test-results:/test-results \
            --volume ./${{ matrix.trivyignores }}:/.trivyignore.yaml \
            --env TRIVY_IGNOREFILE='.trivyignore.yaml' \
            --env TRIVY_DB_REPOSITORY=${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-db:2 \
            --env TRIVY_JAVA_DB_REPOSITORY=${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-java-db:1 \
            --env TRIVY_USERNAME=${{ steps.login_ecr.outputs.docker_username_311462405659_dkr_ecr_eu_west_1_amazonaws_com }} \
            --env TRIVY_PASSWORD=${{ steps.login_ecr.outputs.docker_password_311462405659_dkr_ecr_eu_west_1_amazonaws_com }} \
            aquasec/trivy:0.65.0 image ${{ matrix.ecr_repository }}:${{ inputs.tag }} \
            --severity HIGH,CRITICAL \
            --exit-code 1 \
            --format sarif --output ./test-results/trivy.sarif \

      - name: Upload Trivy scan results to GitHub Security tab for ${{ matrix.ecr_repository }}
        id: trivy_upload_sarif
        uses: github/codeql-action/upload-sarif@2d92b76c45b91eb80fc44c74ce3fce0ee94e8f9d # v3.30.0
        if: always()
        with:
          sarif_file: './test-results/trivy.sarif'

      - name: Trivy Image SBOM Generator for ${{ matrix.ecr_repository }} and submit results to Dependency Graph
        id: trivy_sbom
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        env:
          TRIVY_DB_REPOSITORY: ${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: ${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-java-db:1
          TRIVY_IGNOREFILE: ${{ matrix.trivyignores }}
        with:
          scan-type: 'image'
          image-ref: ${{ matrix.ecr_repository }}:${{ inputs.tag }}
          format: 'github'
          output: '${{ matrix.name }}-${{ inputs.tag }}.sbom.json'
          github-pat: ${{ secrets.GITHUB_TOKEN }}
          version: v0.65.0

      - name: Upload trivy report as a Github artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: trivy-sbom-report-${{ matrix.name }}-${{ inputs.tag }}
          path: '${{ github.workspace }}/${{ matrix.name }}-${{ inputs.tag }}.sbom.json'
          retention-days: 20 # 90 is the default

      - name: Push ${{ matrix.ecr_repository }} Image to ECR for PR
        if: ${{ github.workflow != 'Path To Live' }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ${{ matrix.path }}
          builder: ${{ steps.buildx_setup.outputs.name }}
          push: true
          platforms:  ${{ matrix.platforms }}
          cache-to: type=registry,mode=max,image-manifest=true,oci-mediatypes=true,ref=${{ steps.login_ecr.outputs.registry }}/${{ matrix.ecr_repository }}:cache-${{ inputs.branch_name }}
          tags: |
            ${{ steps.login_ecr.outputs.registry }}/${{ matrix.ecr_repository }}:${{ inputs.tag }}
          build-args: |
            TAG=${{inputs.tag}}
          sbom: false
          provenance: false
        env:
          SOURCE_DATE_EPOCH: 0
          DOCKER_CONTENT_TRUST: 1

      - name: Push ${{ matrix.ecr_repository }} Image to ECR for Path to Live
        if: ${{ github.workflow == 'Path To Live' }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ${{ matrix.path }}
          builder: ${{ steps.buildx_setup.outputs.name }}
          push: true
          platforms:  ${{ matrix.platforms }}
          cache-to: type=registry,mode=max,image-manifest=true,oci-mediatypes=true,ref=${{ steps.login_ecr.outputs.registry }}/${{ matrix.ecr_repository }}:cache-${{ inputs.branch_name }}
          tags: |
            ${{ steps.login_ecr.outputs.registry }}/${{ matrix.ecr_repository }}:${{ inputs.tag }}
            ${{ steps.login_ecr.outputs.registry }}/${{ matrix.ecr_repository }}:main-${{ inputs.tag }}
            ${{ steps.login_ecr.outputs.registry }}/${{ matrix.ecr_repository }}:latest
          build-args: |
            TAG=${{inputs.tag}}
          sbom: false
          provenance: false
        env:
          SOURCE_DATE_EPOCH: 0
          DOCKER_CONTENT_TRUST: 1
