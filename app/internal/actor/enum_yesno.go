// Code generated by "enumerator -type YesNo -linecomment"; DO NOT EDIT.
package actor

import (
	"fmt"
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unselected-0]
	_ = x[Yes-1]
	_ = x[No-2]
}

const _YesNo_name = "Unselectedyesno"

var _YesNo_index = [...]uint8{0, 10, 13, 15}

func (i YesNo) String() string {
	if i >= YesNo(len(_YesNo_index)-1) {
		return "YesNo(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _YesNo_name[_YesNo_index[i]:_YesNo_index[i+1]]
}

func (i YesNo) IsUnselected() bool {
	return i == Unselected
}

func (i YesNo) IsYes() bool {
	return i == Yes
}

func (i YesNo) IsNo() bool {
	return i == No
}

func ParseYesNo(s string) (YesNo, error) {
	switch s {
	case "Unselected":
		return Unselected, nil
	case "yes":
		return Yes, nil
	case "no":
		return No, nil
	default:
		return YesNo(0), fmt.Errorf("invalid YesNo '%s'", s)
	}
}

type YesNoOptions struct {
	Unselected YesNo
	Yes        YesNo
	No         YesNo
}

var YesNoValues = YesNoOptions{
	Unselected: Unselected,
	Yes:        Yes,
	No:         No,
}
