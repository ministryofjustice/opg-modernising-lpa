// Code generated by mockery v2.20.0. DO NOT EDIT.

package page

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockDashboardStore is an autogenerated mock type for the DashboardStore type
type mockDashboardStore struct {
	mock.Mock
}

// GetAll provides a mock function with given fields: ctx
func (_m *mockDashboardStore) GetAll(ctx context.Context) ([]*Lpa, []*Lpa, []*Lpa, error) {
	ret := _m.Called(ctx)

	var r0 []*Lpa
	var r1 []*Lpa
	var r2 []*Lpa
	var r3 error
	if rf, ok := ret.Get(0).(func(context.Context) ([]*Lpa, []*Lpa, []*Lpa, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) []*Lpa); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*Lpa)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) []*Lpa); ok {
		r1 = rf(ctx)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]*Lpa)
		}
	}

	if rf, ok := ret.Get(2).(func(context.Context) []*Lpa); ok {
		r2 = rf(ctx)
	} else {
		if ret.Get(2) != nil {
			r2 = ret.Get(2).([]*Lpa)
		}
	}

	if rf, ok := ret.Get(3).(func(context.Context) error); ok {
		r3 = rf(ctx)
	} else {
		r3 = ret.Error(3)
	}

	return r0, r1, r2, r3
}

type mockConstructorTestingTnewMockDashboardStore interface {
	mock.TestingT
	Cleanup(func())
}

// newMockDashboardStore creates a new instance of mockDashboardStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockDashboardStore(t mockConstructorTestingTnewMockDashboardStore) *mockDashboardStore {
	mock := &mockDashboardStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
