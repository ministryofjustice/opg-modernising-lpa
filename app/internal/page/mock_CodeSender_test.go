// Code generated by mockery v2.20.0. DO NOT EDIT.

package page

import (
	context "context"

	notify "github.com/ministryofjustice/opg-modernising-lpa/internal/notify"
	mock "github.com/stretchr/testify/mock"
)

// mockCodeSender is an autogenerated mock type for the CodeSender type
type mockCodeSender struct {
	mock.Mock
}

// Send provides a mock function with given fields: ctx, template, appData, email, identity
func (_m *mockCodeSender) Send(ctx context.Context, template notify.TemplateId, appData AppData, email string, identity bool) error {
	ret := _m.Called(ctx, template, appData, email, identity)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, notify.TemplateId, AppData, string, bool) error); ok {
		r0 = rf(ctx, template, appData, email, identity)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewMockCodeSender interface {
	mock.TestingT
	Cleanup(func())
}

// newMockCodeSender creates a new instance of mockCodeSender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockCodeSender(t mockConstructorTestingTnewMockCodeSender) *mockCodeSender {
	mock := &mockCodeSender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
